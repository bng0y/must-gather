#! /bin/bash

BASE_COLLECTION_PATH=${BASE_COLLECTION_PATH:-"./must-gather"}

# log produces a formatted log string with component, level, and message positional arguments:
# - 1 argument:  Log message (default log level)
# - 2 arguments: Custom log level and message
log() {
  lvl="${1}"
  msg="${2}"

  if [[ "$#" == "1" ]]; then
    msg="${1}"
    lvl="INFO"
  fi

  case ${lvl} in
    INFO | WARN | DEBUG | ERROR);;
    *) lvl="INFO";;
  esac

  printf "%s\tacm-must-gather\t%s\n" "${lvl}" "${msg}"
}

# run_inspect wraps `oc adm inspect` by logging the args and running it with common flags
run_inspect() {
  args="$*"
  log "Inspecting ${args}"
  # shellcheck disable=SC2086
  # - BASE_COLLECTION_PATH can't be quoted because `oc` reads the quotes as part of the path
  oc adm inspect --dest-dir=${BASE_COLLECTION_PATH} "$@"
}

check_if_hypershift() {
  # get the hosted cluster name and optionally namespace
  while [ "$1" != "" ]; do
    FLAG=$(echo "$1" | awk -F= '{print $1}')
    VALUE=$(echo "$1" | awk -F= '{print $2}')
    case $FLAG in
    hosted-cluster-name)
      HC_NAME=$VALUE
      ;;
    hosted-cluster-namespace)
      HC_NAMESPACE=$VALUE
      ;;
    *)
      log "ERROR" "unknown parameter \"$FLAG\""
      exit 1
      ;;
    esac
    shift
  done
}

dump_hostedcluster() {
  if [[ -z $HC_NAME ]]; then
    log "Hosted cluster name was not provided. Skip collecting hosted cluster must-gather."
    return 0
  fi

  HC=$(oc get hostedcluster $HC_NAME -n $HC_NAMESPACE)
  if [[ -z $HC ]]; then
    log "ERROR" "hosted cluster \"$HC_NAME\" not found in \"$HC_NAMESPACE\" namespace"
    return 1
  fi

  log "Collecting must-gather for hosted cluster \"$HC_NAME\" in namespace \"$HC_NAMESPACE\""
  log "--archive-dump false"
  hypershift dump cluster --dump-guest-cluster --artifact-dir $BASE_COLLECTION_PATH --name $HC_NAME --namespace $HC_NAMESPACE
}

  # This is not supported yet
  gather_all_hostedclusters() {
    run_inspect pod -n open-cluster-management-agent-addon
    run_inspect pod -n hypershift

    HC_NAMESPACES=$(oc get hostedcluster --all-namespaces --no-headers=true -o custom-columns=NAMESPACE:.metadata.namespace | sort -u)

    if [[ -n $HC_NAMESPACES ]]; then
      for hc_namespace in ${HC_NAMESPACES}; do
        HC_LIST=$(oc get hostedcluster -n $hc_namespace --no-headers=true -o custom-columns="NAME:.metadata.name")
        if [[ -n $HC_LIST ]]; then
          for hc in ${HC_LIST}; do
            log "Collecting must-gather for hosted cluster $hc"
            hypershift dump cluster --dump-guest-cluster --artifact-dir $BASE_COLLECTION_PATH --name $hc --namespace $hc_namespace
          done
        else
          log "No hosted cluster found in $hc_namespace namespace."
          return
        fi
      done
    else
      log "No hosted cluster found."
      return
    fi
  }